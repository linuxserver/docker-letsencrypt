#!/usr/bin/with-contenv bash

# make our folders and links
mkdir -p \
	/config/{log/letsencrypt,log/fail2ban,etc/letsencrypt,fail2ban,crontabs} \
	/var/run/fail2ban
rm -rf /etc/letsencrypt
ln -s /config/etc/letsencrypt /etc/letsencrypt

# copy config files
[[ ! -f /config/fail2ban/jail.local ]] && \
	cp /defaults/jail.local /config/fail2ban/jail.local
[[ ! -d /config/fail2ban/filter.d ]] && \
	cp -R /etc/fail2ban/filter.d /config/fail2ban/
[[ ! -d /config/fail2ban/action.d ]] && \
	cp -R /etc/fail2ban/action.d /config/fail2ban/
cp -R /config/fail2ban/filter.d/* /etc/fail2ban/filter.d/
cp -R /config/fail2ban/action.d/* /etc/fail2ban/action.d/
cp /config/fail2ban/jail.local /etc/fail2ban/jail.local
[[ ! -f /config/crontabs/root ]] && \
	cp /etc/crontabs/root /config/crontabs/

# import user crontabs
rm /etc/crontabs/*
cp /config/crontabs/* /etc/crontabs/

# create original config file if it doesn't exist
if [ ! -f "/config/donoteditthisfile.conf" ]; then
  echo -e "ORIGURL=\"$URL\" ORIGSUBDOMAINS=\"$SUBDOMAINS\" ORIGONLY_SUBDOMAINS=\"$ONLY_SUBDOMAINS\" ORIGDHLEVEL=\"$DHLEVEL\"" > /config/donoteditthisfile.conf
fi

# load original config settings
. /config/donoteditthisfile.conf

# compare dhparams existence and level, create if necessary
if [ ! "$DHLEVEL" = "$ORIGDHLEVEL" ]; then
  rm -rf /config/nginx/dhparams.pem
  echo "DH parameters bit setting changed. Deleting old dhparams file."
fi

if [ ! -f "/config/nginx/dhparams.pem" ]; then
  echo "Creating DH parameters for additional security. This may take a very long time. There will be another message once this process is completed"
  openssl dhparam -out /config/nginx/dhparams.pem "$DHLEVEL"
  echo "DH parameters successfully created - " "$DHLEVEL" "bits"
else
  echo "$ORIGDHLEVEL" "bit DH parameters present"
fi

# figuring out url only vs url & subdomains vs subdomains only
if [ ! -z "$SUBDOMAINS" ]; then
  echo "SUBDOMAINS entered, processing"
  for job in $(echo "$SUBDOMAINS" | tr "," " "); do
    export SUBDOMAINS2="$SUBDOMAINS2 -d "$job"."$URL""
  done
  if [ "$ONLY_SUBDOMAINS" = true ]; then
    URLS="$SUBDOMAINS2"
    echo "Only subdomains, no URL in cert"
  else
    URLS="-d $URL $SUBDOMAINS2"
  fi
  echo "Sub-domains processed are:" "$SUBDOMAINS2"
else
  echo "No subdomains defined"
  URLS="-d $URL"
fi

# setting the symlink for key location
rm -rf /config/keys/letsencrypt
if [ "$ONLY_SUBDOMAINS" = "true" ]; then
  DOMAIN="$(echo "$SUBDOMAINS" | tr ',' ' ' | awk '{print $1}')"."$URL"
  ln -s /config/etc/letsencrypt/live/"$DOMAIN" /config/keys/letsencrypt
else
  ln -s /config/etc/letsencrypt/live/"$URL" /config/keys/letsencrypt
fi

# checking for changes in cert variables, revoking certs if necessary
if [ ! "$URL" = "$ORIGURL" ] || [ ! "$SUBDOMAINS" = "$ORIGSUBDOMAINS" ] || [ ! "$ONLY_SUBDOMAINS" = "$ORIGONLY_SUBDOMAINS" ]; then
  echo "Different sub/domains entered than what was used before. Revoking and deleting existing certificate, and an updated one will be created"
  if [ "$ORIGONLY_SUBDOMAINS" = "true" ]; then
    ORIGDOMAIN="$(echo "$ORIGSUBDOMAINS" | tr ',' ' ' | awk '{print $1}')"."$ORIGURL"
    certbot revoke --non-interactive --cert-path /config/etc/letsencrypt/live/"$ORIGDOMAIN"/fullchain.pem
  else
    certbot revoke --non-interactive --cert-path /config/etc/letsencrypt/live/"$ORIGURL"/fullchain.pem
  fi
  rm -rf /config/etc
  mkdir -p /config/etc/letsencrypt
fi

# generating certs if necessary
if [ ! -f "/config/keys/letsencrypt/fullchain.pem" ]; then
  echo "Generating new certificate"
  certbot certonly --non-interactive --renew-by-default --standalone --standalone-supported-challenges tls-sni-01 --rsa-key-size 4096 --email "$EMAIL" --agree-tos "$URLS"
  cd /config/keys/letsencrypt || exit
  openssl pkcs12 -export -out privkey.pfx -inkey privkey.pem -in cert.pem -certfile chain.pem -passout pass:
else
  chmod +x /app/le-renew.sh
  /app/le-renew.sh
fi

# saving new variables
echo -e "ORIGURL=\"$URL\" ORIGSUBDOMAINS=\"$SUBDOMAINS\" ORIGONLY_SUBDOMAINS=\"$ONLY_SUBDOMAINS\" ORIGDHLEVEL=\"$DHLEVEL\"" > /config/donoteditthisfile.conf

# permissions
chown -R abc:abc \
	/config
chmod -R 0644 /etc/logrotate.d /config/log

# Start fail2ban
[[ ! -f /config/log/nginx/error.log ]] && \
	touch /config/log/nginx/error.log
[[ ! -f /config/log/nginx/access.log ]] && \
	touch /config/log/nginx/access.log
fail2ban-client -x start
